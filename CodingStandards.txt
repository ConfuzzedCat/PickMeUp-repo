Alt på engelsk, method, var, etc.
camelCase på method, Variabler
Inline brackets ved if, else, while osv.
tillad unlimited private hjælpe methoder
Hvis en dependency er manglende så skriv dummy code
overlap diskuteres mellem teams, hvor overlappet er
lave tdd på hvad der er vigtigst
Magic numbers/variable er beskred med en comment
bruge variabler isted for bare værdier der er indsat
javadoc til method og classes. Skal indeholde forfatter og User Story
fejlhåndter bubbler op til f.eks controller
Dummy

Branches skal laves ud fra dev.
Vi laver branches udfra tasks.
Branches navne skal have us nummer og tasks nummer, som minimium.
branches skal lukkes når de er merged in i dev.



I frontend bruger vi Anders' Prettier config*
I frontend bruger vi React.js


teams aftaler indburdes hvornår man kode, også aftaler scrum master hvornår de taler sammen

Main branch kommer til at være beskyttet mod pushes. 
Der skal lave pull requests fra en dev branch. 
Der kommer til at være branches for hver user story, og der skal laves review af det team som arbejder på user storien før der kan pushes til dev.

Der arbejdes ud fra et mobile first koncept. 

Der er lavet et TDD tag på taiga, tasks som er markeret med TDD-tagget skal laves ved TDD.
Alle funktioner som ikke har TDD tag, og ikke er en getter eller setter, skal unittestes.
Unittests kører når der laves pull requests fra dev til user story branches. 
Integrationstests kører når der laves pull request fra main til dev.

PlantUML klassediagram skal opdateres løbende, som minimum efter hver task for at give overblik over hvad der er lavet og er til rådighed.




Anders Prettier config
SOF
{
  "trailingComma": "es5",
  "tabWidth": 2,
  "semi": false,
  "singleQuote": false,
  "printWidth": 1000,
  "useTabs": false,
  "overrides": [
    {
      "files": "*.jsx",
      "options": {
        "printWidth": 80
      }
    }
  ]
}
EOF,









































